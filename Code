using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml.Linq;

namespace game1
{
    public partial class Form1 : Form
    {
        public string pturn = "X";
        public string eturn = "0";
        public int wins = 0;
        public int modifier;
        public int score;
        public int x;
        public int y;
        public string difficulty;
        public bool EnemyClick = true;
        private Button[,] buttons = new Button[3, 3];
        public Score[] records = new Score[15];
        Random rand = new Random();
        Label label1 = new Label();
        Label label2 = new Label();
        Label label3 = new Label();
        Button button0 = new Button();
        Button button1 = new Button();
        Button button2 = new Button();
        Button button3 = new Button();
        Button button4 = new Button();
        Button button5 = new Button();
        Button button6 = new Button();

        public Form1()
        {
            InitializeComponent();
            this.Width = 370;
            this.Height = 625;
            this.StartPosition = FormStartPosition.CenterScreen;
            ButtonCreate();
            MainMenu();
        }

        private void ButtonCreate()
        {
            label1.Text = "Побед подряд: 0";                                    //для меню
            label1.Location = new Point(97, 21);
            label1.Font = new Font(new FontFamily("Times New Roman"), 16);
            label1.Size = new Size(180, 23);
            this.Controls.Add(label1);

            button2.Click += Dif;
            button2.Size = new Size(160, 120);
            button2.Font = new Font(new FontFamily("Times New Roman"), 16);
            button2.Location = new Point(105, 390);
            button2.Text = "Лёгкая";
            button2.Visible = false;
            this.Controls.Add(button2);

            button3.Click += Dif;
            button3.Size = new Size(160, 120);
            button3.Font = new Font(new FontFamily("Times New Roman"), 16);
            button3.Location = new Point(105, 240);
            button3.Text = "Средняя";
            button3.Visible = false;
            this.Controls.Add(button3);

            button4.Click += Dif;
            button4.Size = new Size(160, 120);
            button4.Font = new Font(new FontFamily("Times New Roman"), 16);
            button4.Location = new Point(105, 90);
            button4.Text = "Сложная";
            button4.Visible = false;
            this.Controls.Add(button4);

            button0.Click += NewGame;                                       //для игры
            button0.Size = new Size(200, 32);
            button0.Font = new Font(new FontFamily("Times New Roman"), 16);
            button0.Location = new Point(125, 58);
            button0.Text = "Новая Игра";
            button0.Visible = false;
            this.Controls.Add(button0);

            button1.Click += RestartGame;
            button1.Size = new Size(100, 32);
            button1.Font = new Font(new FontFamily("Times New Roman"), 16);
            button1.Location = new Point(25, 58);
            button1.Text = "Заново";
            button1.Visible = false;
            this.Controls.Add(button1);

            button5.Click += ButtonClickSeeTurn;
            button5.Size = new Size(100, 100);
            button5.Font = new Font(new FontFamily("Times New Roman"), 48);
            button5.Location = new Point(25, 450);
            button5.Text = "X";
            button5.ForeColor = Color.Green;
            button5.Visible = false;
            this.Controls.Add(button5);

            label2.Text = "Ты";
            label2.Location = new Point(50, 425);
            label2.Font = new Font(new FontFamily("Times New Roman"), 16);
            label2.Size = new Size(50, 23);
            label2.ForeColor = Color.Green;
            label2.Visible = false;
            this.Controls.Add(label2);

            button6.Click += ButtonClickSeeTurn;
            button6.Size = new Size(100, 100);
            button6.Font = new Font(new FontFamily("Times New Roman"), 48);
            button6.Location = new Point(225, 450);
            button6.Text = "0";
            button6.ForeColor = Color.Red;
            button6.Visible = false;
            this.Controls.Add(button6);

            label3.Text = "Враг";
            label3.Location = new Point(250, 425);
            label3.Font = new Font(new FontFamily("Times New Roman"), 16);
            label3.Size = new Size(180, 23);
            label3.ForeColor = Color.Red;
            label3.Visible = false;
            this.Controls.Add(label3);

            for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++)
                {
                    buttons[i, j] = new Button();
                    buttons[i, j].Size = new Size(100, 100);
                    buttons[i, j].Location = new Point(25 + 100 * j, 100 + 100 * i);
                    buttons[i, j].Font = new Font(new FontFamily("Times New Roman"), 48);
                    buttons[i, j].Click += ButtonClick;
                    buttons[i, j].Visible = false;
                    this.Controls.Add(buttons[i, j]);
                }
        }

        private void MainMenu()
        {
            for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++)
                {
                    buttons[i, j].Visible = false;
                }
            button0.Visible = false;
            button1.Visible = false;
            button5.Visible = false;
            button6.Visible = false;
            label2.Visible = false;
            label3.Visible = false;
            button2.Visible = true;
            button3.Visible = true;
            button4.Visible = true;

            label1.Text = "Выберите сложность";
            label1.Location = new Point(80, 21);
            label1.Font = new Font(new FontFamily("Times New Roman"), 16);
            label1.Size = new Size(212, 23);
            this.Controls.Add(label1);
        }

        private void Dif(object sender, EventArgs e)
        {
            switch (sender.GetType().GetProperty("Text").GetValue(sender))
            {
                case "Лёгкая":
                    difficulty = "Лёгкая";
                    modifier = 1;
                    break;
                case "Средняя":
                    difficulty = "Средняя";
                    modifier = 3;
                    break;
                case "Сложная":
                    difficulty = "Сложная";
                    modifier = 5;
                    break;
                default:
                    MessageBox.Show("Что-то пошло не так");
                    break;
            }
            GameStart();
            pturn = "X";
            eturn = "0";
            EnemyClick = true;
        }

        private void GameStart()
        {
            button0.Visible = true;
            button1.Visible = true;
            button5.Visible = true;
            button6.Visible = true;
            label2.Visible = true;
            label3.Visible = true;
            button2.Visible = false;
            button3.Visible = false;
            button4.Visible = false;

            label1.Text = "Побед подряд: 0";
            label1.Location = new Point(97, 21);
            label1.Font = new Font(new FontFamily("Times New Roman"), 16);
            label1.Size = new Size(180, 23);

            for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++)
                {
                    buttons[i, j].Visible = true;
                }
        }

        private void NewGame(object sender, EventArgs e)
        {
            wins = 0;
            label1.Text = "Побед подряд: " + wins;
            ResetBoard();
            MainMenu();
        }

        private void ButtonClickSeeTurn(object sender, EventArgs e)
        {
            if (sender.GetType().GetProperty("Text").GetValue(sender) == pturn)
                MessageBox.Show("Ты ходишь: " + pturn);
            if (sender.GetType().GetProperty("Text").GetValue(sender) == eturn)
                MessageBox.Show("Враг ходит: " + eturn);
        }

        private void ButtonClick(object sender, EventArgs e)
        {
            sender.GetType().GetProperty("Text").SetValue(sender, pturn);
            sender.GetType().GetProperty("Enabled").SetValue(sender, false);
            EnemyClick = false;
            WinСheck();
            if (FullBoard() == true)
            {
                MessageBox.Show("Ничья");
                EnemyClick = true;
                ResetBoard();
                ChangePlayers();
            }
            EnemyTurn();
            WinСheck();
            if (FullBoard() == true)
            {
                MessageBox.Show("Ничья");
                ResetBoard();
                ChangePlayers();
            }
        }

        private void RestartGame(object sender, EventArgs e)
        {
            score = wins * modifier;
            saveScore();
            wins = 0;
            label1.Text = "Побед подряд: " + wins;
            ResetBoard();
        }

        private void ResetBoard()
        {
            for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++)
                {
                    buttons[i, j].Text = "";
                    buttons[i, j].Enabled = true;
                }
        }

        public bool FullBoard()
        {
            for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++)
                {
                    if (buttons[i, j].Enabled == true)
                        return false;
                }
            return true;
        }

        public class Score
        {
            public int score;
            public int place;
            public int modifier;
            public string difficulty;

            public Score()
            {
                this.score = 0;
                this.place = 1;
                this.modifier = 1;
            }

            public string Text()
            {
                return String.Format("{0}. {1}(x{2}) {3}", this.place, this.difficulty, this.modifier, this.score);
            }

            public void GetScore(string line)
            {
                if (line != null)
                {
                    int k = 0;
                    while (!line[k].Equals('.'))
                    {
                        k++;
                    }
                    int.TryParse(line.Substring(0, k), out this.place);
                    for (int j = 0; j < line.Length; j++)
                    {
                        k = 0;
                        if (line[j].Equals('.'))
                        {
                            while (!line[j + k + 1].Equals('('))
                            {
                                k++;
                            }
                            this.difficulty = line.Substring(j + 2, k - 1);
                        }
                        k = 0;
                        if (line[j].Equals('x'))
                        {
                            while (!line[j + k].Equals(')'))
                            {
                                k++;
                            }
                            int.TryParse(line.Substring(j + 1, k - 1), out this.modifier);
                        }
                        if (line[j].Equals(' '))
                        {
                            int.TryParse(line.Substring(j + 1), out this.score);
                        }
                    }
                }
            }
        }

        private void EnemyTurn()
        {
            int player;
            switch (difficulty)
            {
                case "Лёгкая":                                                //нет стратегии
                    while (EnemyClick == false && FullBoard() == false)
                    {
                        x = rand.Next(0, 3);
                        y = rand.Next(0, 3);
                        if (buttons[x, y].Enabled == true)
                        {
                            buttons[x, y].Text = eturn;
                            buttons[x, y].Enabled = false;
                            EnemyClick = true;
                        }
                    }
                    break;
                case "Средняя":
                    player = 0;
                    if (eturn == "0" && EnemyClick == false && buttons[1, 1].Enabled == true) //если отдали середину
                    {
                        buttons[1, 1].Text = eturn;
                        buttons[1, 1].Enabled = false;
                        EnemyClick = true;
                    }

                    if (EnemyClick == false)                                //защита
                        for (int i = 0; i < 3; i++)
                        {
                            for (int j = 0; j < 3; j++)
                            {
                                if (buttons[i, j].Text == pturn)
                                    player++;
                                if (player == 2)
                                {
                                    for (int k = 0; k < 3; k++)
                                        if (buttons[i, k].Enabled == true)
                                        {
                                            buttons[i, k].Text = eturn;
                                            buttons[i, k].Enabled = false;
                                            EnemyClick = true;
                                        }
                                    break;
                                }
                            }
                            player = 0; 
                        }
                    if (EnemyClick == false)
                        for (int j = 0; j < 3; j++)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                if (buttons[i, j].Text == pturn)
                                    player++;
                                if (player == 2)
                                {
                                    for (int k = 0; k < 3; k++)
                                        if (buttons[k, j].Enabled == true)
                                        {
                                            buttons[k, j].Text = eturn;
                                            buttons[k, j].Enabled = false;
                                            EnemyClick = true;
                                        }
                                    break;
                                }
                            }
                            player = 0;
                        }
                    if (EnemyClick == false)
                        for (int i = 0; i < 3; i++)
                        {
                            if (buttons[i, i].Text == pturn)
                                player++;
                            if (player == 2)
                            {
                                for (int k = 0; k < 3; k++)
                                    if (buttons[k, k].Enabled == true)
                                    {
                                        buttons[k, k].Text = eturn;
                                        buttons[k, k].Enabled = false;
                                        EnemyClick = true;
                                    }
                                break;

                            }
                        }
                    player = 0;
                    if (EnemyClick == false)
                        for (int i = 2; i < -1; i++)
                        {
                            if (buttons[i, 2-i].Text == pturn)
                                player++;
                            if (player == 2)
                            {
                                for (int k = 2; k < -1; k++)
                                    if (buttons[k, 2-k].Enabled == true)
                                    {
                                        buttons[k, 2-k].Text = eturn;
                                        buttons[k, 2-k].Enabled = false;
                                        EnemyClick = true;
                                    }
                                break;

                            }
                        }
                    player = 0;


                    while (EnemyClick == false && FullBoard() == false)                 //нет стратегии
                    {
                        x = rand.Next(0, 3);
                        y = rand.Next(0, 3);
                        if (buttons[x, y].Enabled == true && EnemyClick == false)
                        {
                            buttons[x, y].Text = eturn;
                            buttons[x, y].Enabled = false;
                            EnemyClick = true;
                        }
                    }
                    break;
                case "Сложная":
                    player = 0;
                    if (eturn == "0" && EnemyClick == false && buttons[1, 1].Enabled == true) //если отдали середину
                    {
                        buttons[1, 1].Text = eturn;
                        buttons[1, 1].Enabled = false;
                        EnemyClick = true;
                    }

                    if (EnemyClick == false)                                //атака
                        for (int i = 0; i < 3; i++)
                        {
                            for (int j = 0; j < 3; j++)
                            {
                                if (buttons[i, j].Text == eturn)
                                    player++;
                                if (player == 2)
                                {
                                    for (int k = 0; k < 3; k++)
                                        if (buttons[i, k].Enabled == true)
                                        {
                                            buttons[i, k].Text = eturn;
                                            buttons[i, k].Enabled = false;
                                            EnemyClick = true;
                                        }
                                    break;
                                }
                            }
                            player = 0;
                        }
                    if (EnemyClick == false)
                        for (int j = 0; j < 3; j++)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                if (buttons[i, j].Text == eturn)
                                    player++;
                                if (player == 2)
                                {
                                    for (int k = 0; k < 3; k++)
                                        if (buttons[k, j].Enabled == true)
                                        {
                                            buttons[k, j].Text = eturn;
                                            buttons[k, j].Enabled = false;
                                            EnemyClick = true;
                                        }
                                    break;
                                }
                            }
                            player = 0;
                        }
                    if (EnemyClick == false)
                        for (int i = 0; i < 3; i++)
                        {
                            if (buttons[i, i].Text == eturn)
                                player++;
                            if (player == 2)
                            {
                                for (int k = 0; k < 3; k++)
                                    if (buttons[k, k].Enabled == true)
                                    {
                                        buttons[k, k].Text = eturn;
                                        buttons[k, k].Enabled = false;
                                        EnemyClick = true;
                                    }
                                break;

                            }
                        }
                    player = 0;
                    if (EnemyClick == false)
                        for (int i = 2; i < -1; i++)
                        {
                            if (buttons[i, 2 - i].Text == eturn)
                                player++;
                            if (player == 2)
                            {
                                for (int k = 2; k < -1; k++)
                                    if (buttons[k, 2 - k].Enabled == true)
                                    {
                                        buttons[k, 2 - k].Text = eturn;
                                        buttons[k, 2 - k].Enabled = false;
                                        EnemyClick = true;
                                    }
                                break;

                            }
                        }
                    player = 0;

                    if (EnemyClick == false)                                //защита
                        for (int i = 0; i < 3; i++)
                        {
                            for (int j = 0; j < 3; j++)
                            {
                                if (buttons[i, j].Text == pturn)
                                    player++;
                                if (player == 2)
                                {
                                    for (int k = 0; k < 3; k++)
                                        if (buttons[i, k].Enabled == true)
                                        {
                                            buttons[i, k].Text = eturn;
                                            buttons[i, k].Enabled = false;
                                            EnemyClick = true;
                                        }
                                    break;
                                }
                            }
                            player = 0;
                        }
                    if (EnemyClick == false)
                        for (int j = 0; j < 3; j++)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                if (buttons[i, j].Text == pturn)
                                    player++;
                                if (player == 2)
                                {
                                    for (int k = 0; k < 3; k++)
                                        if (buttons[k, j].Enabled == true)
                                        {
                                            buttons[k, j].Text = eturn;
                                            buttons[k, j].Enabled = false;
                                            EnemyClick = true;
                                        }
                                    break;
                                }
                            }
                            player = 0;
                        }
                    if (EnemyClick == false)
                        for (int i = 0; i < 3; i++)
                        {
                            if (buttons[i, i].Text == pturn)
                                player++;
                            if (player == 2)
                            {
                                for (int k = 0; k < 3; k++)
                                    if (buttons[k, k].Enabled == true)
                                    {
                                        buttons[k, k].Text = eturn;
                                        buttons[k, k].Enabled = false;
                                        EnemyClick = true;
                                    }
                                break;

                            }
                        }
                    player = 0;
                    if (EnemyClick == false)
                        for (int i = 2; i < -1; i++)
                        {
                            if (buttons[i, 2 - i].Text == pturn)
                                player++;
                            if (player == 2)
                            {
                                for (int k = 2; k < -1; k++)
                                    if (buttons[k, 2 - k].Enabled == true)
                                    {
                                        buttons[k, 2 - k].Text = eturn;
                                        buttons[k, 2 - k].Enabled = false;
                                        EnemyClick = true;
                                    }
                                break;

                            }
                        }
                    player = 0;


                    while (EnemyClick == false && FullBoard() == false)                 //нет стратегии
                    {
                        x = rand.Next(0, 3);
                        y = rand.Next(0, 3);
                        if (buttons[x, y].Enabled == true && EnemyClick == false)
                        {
                            buttons[x, y].Text = eturn;
                            buttons[x, y].Enabled = false;
                            EnemyClick = true;
                        }
                    }
                    break;
                default:
                    MessageBox.Show("Что-то пошло не так");
                    break;
            }
        }

        private void DisableBoard()
        {
            for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++)
                {
                    buttons[i, j].Enabled = false;
                }
            Thread.Sleep(1000);
            for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++)
                {
                    buttons[i, j].Enabled = true;
                }
        }

        private void ChangePlayers()
        {
            if (pturn == "X")
            {
                pturn = "0";
                button5.Text = "0";
            }
            else if (pturn == "0")
            {
                pturn = "X";
                button5.Text = "X";
            }

            if (eturn == "0")
            {
                eturn = "X";
                button6.Text = "X";
                EnemyClick = false;
                EnemyTurn();
            }
            else if (eturn == "X")
            {
                eturn = "0";
                button6.Text = "0";
            }
        }

        private void WinСheck()
        {
            for (int i = 0; i < 3; i++)
            {
                if (buttons[i, 0].Text == pturn && buttons[i, 1].Text == pturn && buttons[i, 2].Text == pturn)
                {
                    wins++;
                    label1.Text = "Побед подряд: " + wins;
                    EnemyClick = true;
                    DisableBoard();
                    ResetBoard();
                    ChangePlayers();
                }
            }
            for (int i = 0; i < 3; i++)
            {
                if (buttons[i, 0].Text == eturn && buttons[i, 1].Text == eturn && buttons[i, 2].Text == eturn)
                {
                    score = wins * modifier;
                    saveScore();
                    wins = 0;
                    label1.Text = "Побед подряд: " + wins;
                    EnemyClick = true;
                    DisableBoard();
                    ResetBoard();
                    pturn = "X";
                    eturn = "0";
                }
            }

            for (int i = 0; i < 3; i++)
            {
                if (buttons[0, i].Text == pturn && buttons[1, i].Text == pturn && buttons[2, i].Text == pturn)
                {
                    wins++;
                    label1.Text = "Побед подряд: " + wins;
                    EnemyClick = true;
                    DisableBoard();
                    ResetBoard();
                    ChangePlayers();
                }
            }
            for (int i = 0; i < 3; i++)
            {
                if (buttons[0, i].Text == eturn && buttons[1, i].Text == eturn && buttons[2, i].Text == eturn)
                {
                    score = wins * modifier;
                    saveScore();
                    wins = 0;
                    label1.Text = "Побед подряд: " + wins;
                    EnemyClick = true;
                    DisableBoard();
                    ResetBoard();
                    pturn = "X";
                    eturn = "0";
                }
            }

            if (buttons[0, 0].Text == pturn && buttons[1, 1].Text == pturn && buttons[2, 2].Text == pturn)
            {
                wins++;
                label1.Text = "Побед подряд: " + wins;
                EnemyClick = true;
                DisableBoard();
                ResetBoard();
                ChangePlayers();
            }
            else if (buttons[0, 0].Text == eturn && buttons[1, 1].Text == eturn && buttons[2, 2].Text == eturn)
            {
                score = wins * modifier;
                saveScore();
                wins = 0;
                label1.Text = "Побед подряд: " + wins;
                EnemyClick = true;
                DisableBoard();
                ResetBoard();
                pturn = "X";
                eturn = "0";
            }

            if (buttons[0, 2].Text == pturn && buttons[1, 1].Text == pturn && buttons[2, 0].Text == pturn)
            {
                wins++;
                label1.Text = "Побед подряд: " + wins;
                EnemyClick = true;
                DisableBoard();
                ResetBoard();
                ChangePlayers();
            }
            else if (buttons[0, 2].Text == eturn && buttons[1, 1].Text == eturn && buttons[2, 0].Text == eturn)
            {
                score = wins * modifier;
                saveScore();
                wins = 0;
                label1.Text = "Побед подряд: " + wins;
                EnemyClick = true;
                DisableBoard();
                ResetBoard();
                pturn = "X";
                eturn = "0";
            }
        
        }

        public void saveScore()
        {
            for (int i = 0; i < records.Length; i++)
                records[i] = new Score();
            string text = "Лучшие рекорды:";
            string path = Directory.GetCurrentDirectory() + @"\Рекорды.txt";
            if (!File.Exists(path))
            {
                using (StreamWriter streamWriter = File.CreateText(path))
                {
                    streamWriter.WriteLine(text);
                }
            }
            StreamReader sr = new StreamReader(path);
            text = sr.ReadLine();
            for (int i = 0; i < 15; i++)
            {
                string line = sr.ReadLine();
                records[i].GetScore(line);
            }
            sr.Close();
            StreamWriter sw = new StreamWriter(path, false, Encoding.UTF8);
            for (int i = 0; i < records.Length; i++)
            {
                if ((score > records[i].score) || (records[i] == null))
                {
                    Score[] temp = new Score[records.Length - i];
                    for (int j = 0; j < temp.Length; j++)
                        temp[j] = new Score();
                    temp[0].score = score;
                    temp[0].modifier = modifier;
                    temp[0].difficulty = difficulty;
                    temp[0].place = i + 1;
                    for (int j = 1; j < temp.Length; j++)
                    {
                        temp[j] = records[i + j - 1];
                        temp[j].place++;
                    }
                    for (int j = 0; j < temp.Length; j++)
                    {
                        records[i + j] = temp[j];
                    }
                    break;
                }
            }
            for (int i = 0; i < records.Length; i++)
            {
                if (records[i].score != 0)
                {
                    text += "\n" + records[i].Text();
                }
            }
            sw.WriteLine(text);
            sw.Close();
        }
    }
}
